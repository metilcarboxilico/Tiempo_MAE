
  /*
  
  
  
  
  /*
  pg = createGraphics(400, 400, P2D);
   pg.noSmooth();
   ac = loadShader("ac array.glsl");//ac array.glsl  //ac arrayrand.glsl
   ac.set("resolution", float(pg.width), float(pg.height));  
   
   
   //capa = loadShader("capa.glsl");
   //capa.set("resolution", float(pg.width), float(pg.height));  
   
   img = loadImage("img2.jpg");
   img2 = loadImage("pantallaverde.jpg");
   
   salida = createImage(400, 400, RGB);
   salida.copy(img, 0, 0, 400, 400, 0, 0, 400, 400);
   
   
   maskShader = loadShader("mask mod.glsl");
   
   //maskShader.set("mask", salida);//tiene q ser una img no funciona pg
   maskShader.set("resolution", float(img.width), float(img.height));
   
   //podria usar el random proppio de glsl y sincronoizarlo con el frame % modulo
   float rulset[]= {(float)(norm*30), (float)(norm*70), 
   (float)(norm*100), (float)(norm*165), 
   (float)(norm*210), (float)(norm*220)};
   */

  /*
//no logre traducirlo
   float minmax[]={  (float)(norm*0), (float)(norm*100), 
   (float)(norm*90), (float)(norm*150), 
   (float)(norm*110),(float)(norm* 180), 
   (float)(norm*220),(float)(norm* 255), 
   (float)(norm*0),(float)(norm*200), 
   (float)(norm*30), (float)(norm*250)};
   
   */


  /*
   
   if (actual<30)actual =random(160);
   else if (actual<30) actual=(suma)/8;
   else if (((suma)/8)>140) actual =random(110, 180);
   else if (((suma)/8)>165) actual =random(220, 255);
   else if (((suma)/8)>210) actual =random(255);
   else if (((suma)/8)>220) actual =random(45);
   
   else actual-=.4;
   
   */


  /*
   float resul[]={  (float)(norm*0.1*random(160)), 
   (float)(norm*random(180)), 
   (float)(norm*random(110, 180)), 
   (float)(norm*random(220, 255)), 
   (float)(norm*random(255)), 
   (float)(norm*random(45))};
   
   
   // float rulset[]= {0.02, 0.07, 0.1, 0.3, 0.5, 0.7};
   //float resul[]={0.0, -0.02, 0.04, 0.1, 0.3, -0.45};
   
   //  ac.set("minmax", minmax); //
   ac.set("resul", resul);
   ac.set("rules", rulset);
   ac.set("dft", (float)(norm*-255*10));
   
   // ac.set("dft",(float)(-1.*norm));
   //print(norm);
   
   */
  /*
  
   double norm =1.0/255; //estudiar el pasaje a doble?
   
   //podria usar el random proppio de glsl y sincronoizarlo con el frame % modulo
   float rulset[]= {(float)(norm*30), (float)(norm*50), 
   (float)(norm*140), (float)(norm*165), 
   (float)(norm*210), (float)(norm*220)};
   
   //usar el random podria requerir algunas cosas mas para usar entre 
   float resul[]={  (float)(norm*random(160)), 
   (float)(norm*random(180)), 
   (float)(norm*random(110, 180)), 
   (float)(norm*random(220, 255)), 
   (float)(norm*random(255)), 
   (float)(norm*random(45))};
   
   ac.set("dft",(float)(norm*-255*4));
   */
  /*
   float resul[]={  (float)(norm*0.1*random(160)), 
   (float)(norm*0.1*random(180)), 
   (float)(norm*0.1*random(110, 180)), 
   (float)(norm*0.1*random(220, 255)), 
   (float)(norm*0.1*random(255)), 
   (float)(norm*0.1*random(45))};
   
   */

  /*  println(norm*random(160));
   float resul[]={  (float)(norm*0.1*random(160)), 
   (float)(norm*random(180)), 
   (float)(norm*random(110, 180)), 
   (float)(norm*random(220, 255)), 
   (float)(norm*random(255)), 
   (float)(norm*random(45))};
   
   ac.set("resul", resul);
   
   */